stages:
  - build
  - publish

default:
  image: elixir:$ELIXIR_VERSION
  tags:
    - docker

image:build:
  image: docker:stable
  stage: build
  services:
    - docker:dind
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -t $CI_REGISTRY_IMAGE:$(cat VERSION) .
    - mkdir image
    - docker save $CI_REGISTRY_IMAGE:$(cat VERSION) > image/image.tar
  artifacts:
    paths:
      - image
    expire_in: 2 hours

image:publish:
  image: docker:stable
  stage: publish
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - VERSION
  dependencies:
    - image:build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker load -i image/image.tar
    - docker push $CI_REGISTRY_IMAGE:$(cat VERSION)
